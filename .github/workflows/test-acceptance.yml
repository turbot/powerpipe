name: Test - Acceptance
on:
  push:
    tags:
      - v*
    branches:
      - main
      - "v*"
  workflow_dispatch:
  pull_request:

jobs:
  goreleaser:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: powerpipe
          ref: ${{ github.event.ref }}

      - name: Checkout Pipe Fittings Components repository
        uses: actions/checkout@v3
        with:
          repository: turbot/pipe-fittings
          path: pipe-fittings

       # this is required, check golangci-lint-action docs
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false # setup-go v4 caches by default, do not change this parameter, check golangci-lint-action doc: https://github.com/golangci/golangci-lint-action/pull/704

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --skip-validate --snapshot
          workdir: powerpipe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          VERSION: $VERSION

      - name: Move build artifacts
        run: |
          ls -al $GITHUB_WORKSPACE/powerpipe
          mkdir ~/artifacts
          mv $GITHUB_WORKSPACE/powerpipe/dist/powerpipe.linux.amd64.tar.gz ~/artifacts/linux.tar.gz
          mv $GITHUB_WORKSPACE/powerpipe/dist/powerpipe.darwin.amd64.tar.gz ~/artifacts/darwin.tar.gz

      - name: List Build Artifacts
        run: ls -l ~/artifacts

      - name: Save Linux Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-linux
          path: ~/artifacts/linux.tar.gz
          if-no-files-found: error

      - name: Save MacOS Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-darwin
          path: ~/artifacts/darwin.tar.gz
          if-no-files-found: error

  acceptance_test:
    name: Test
    needs: goreleaser
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest]
        test_block:
          - "check"
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          path: powerpipe
          ref: ${{ github.event.ref }}

      - uses: actions/setup-go@v5
        with:
          go-version: 1.21
          cache: false

      - name: Prepare for downloads
        id: prepare-for-downloads
        run: |
          mkdir ~/artifacts
  
      - name: Download Linux Build Artifacts
        uses: actions/download-artifact@v3
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        with:
          name: build-artifact-linux
          path: ~/artifacts

      - name: Download Darwin Build Artifacts
        uses: actions/download-artifact@v3
        if: ${{ matrix.platform == 'macos-latest' }}
        with:
          name: build-artifact-darwin
          path: ~/artifacts

      - name: Extract Darwin Artifacts and Install Binary
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          mkdir ~/build
          tar -xf ~/artifacts/darwin.tar.gz -C ~/build

      - name: Extract Ubuntu Artifacts and Install Binary
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          mkdir ~/build
          tar -xf ~/artifacts/linux.tar.gz -C ~/build
      
      - name: Install Steampipe(Darwin)
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          brew install turbot/tap/steampipe
          steampipe -v

      - name: Install Steampipe(Linux)
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          sudo /bin/sh -c "$(curl -fsSL https://steampipe.io/install/steampipe.sh)"
          steampipe -v
      
      - name: Set PATH
        run: |
          echo "PATH=$PATH:$HOME/build:$GTIHUB_WORKSPACE/powerpipe/tests/acceptance/lib/bats-core/libexec" >> $GITHUB_ENV

      - name: Go install jd
        run: |
          go install github.com/josephburnett/jd@latest

      - name: service start
        run: |
          steampipe service start
          steampipe service stop
